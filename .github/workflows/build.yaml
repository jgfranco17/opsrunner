---
name: Build CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Run setup
        uses: ./.github/actions/setup-workspace

      - name: Run unit tests
        run: |
          just test

  build:
    name: Build binary
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run setup
        uses: ./.github/actions/setup-workspace

      - name: Build binary
        run: |
          just build-bin "0.0.0-ci"

      - name: Build check
        run: |
          ./opsrunner --version
          ./opsrunner --help

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: ./opsrunner

  integration:
    name: Run integration test
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.base_ref == github.event.repository.default_branch }}
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: opsrunner
          path: .

      - name: Run binary
        run: |
          ./opsrunner-cli -vv build -f samples/basic.yaml | tee output.txt

      - name: Create test summary
        if: always()
        run: |
          echo "# OpsRunner CLI: Integration Testing Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## CLI output" >> $GITHUB_STEP_SUMMARY
          echo '```console' >> $GITHUB_STEP_SUMMARY
          cat output.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
